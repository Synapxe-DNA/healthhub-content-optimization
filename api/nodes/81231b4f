{
  "code": "def cluster_viz(\n    final_clustered_nodes: pd.DataFrame, final_unclustered_nodes: pd.DataFrame\n):\n    \"\"\"\n    Visualize clustered and unclustered nodes using pyvis.\n\n    This function creates an interactive network graph visualization for clustered and unclustered nodes.\n    Clustered nodes are connected by edges, and each node is annotated with its predicted group and group keywords.\n    Unclustered nodes are displayed without connections.\n\n    Parameters:\n    ----------\n    final_clustered_nodes (pd.DataFrame):\n        A DataFrame containing the clustered nodes with columns:\n        - node_1_title: Title of the first node\n        - node_2_title: Title of the second node\n        - node_1_pred_cluster_new: Predicted cluster for the first node\n        - node_2_pred_cluster_new: Predicted cluster for the second node\n        - cluster_kws_1: Keywords for the first node's cluster\n        - cluster_kws_2: Keywords for the second node's cluster\n        - edge_weight: Weight of the edge connecting the nodes\n\n    final_unclustered_nodes (pd.DataFrame):\n        A DataFrame containing the unclustered nodes with columns:\n        - node_title: Title of the unclustered node\n\n    Returns:\n    -------\n    None\n        The function saves the interactive network graph as an HTML file at \"data/07_model_output/neo4j_cluster_viz.html\" and does not return any value.\n    \"\"\"\n    clustered_df = final_clustered_nodes.copy()\n    unclustered_df = final_unclustered_nodes.copy()\n\n    visual_graph = pyvis.network.Network(select_menu=True, filter_menu=True)\n\n    # Add nodes-nodes pair\n    for _, row in clustered_df.iterrows():\n        # Add nodes\n        visual_graph.add_node(\n            row[\"node_1_title\"],\n            label=row[\"node_1_title\"],\n            title=f\"Predicted group: {row['node_1_pred_cluster_new']}\\nGroup keywords: {row['node_1_cluster_kws']}\\nTitle: {row['node_1_title']}\",\n            group=row[\"node_1_pred_cluster_new\"],\n        )\n        visual_graph.add_node(\n            row[\"node_2_title\"],\n            label=row[\"node_2_title\"],\n            title=f\"Predicted group: {row['node_2_pred_cluster_new']}\\nGroup keywords: {row['node_2_cluster_kws']}\\nTitle: {row['node_2_title']}\",\n            group=row[\"node_2_pred_cluster_new\"],\n        )\n\n        # Add edges\n        visual_graph.add_edge(\n            row[\"node_1_title\"],\n            row[\"node_2_title\"],\n            title=f\"Edge Weight: {row['edge_weight']}\",\n        )\n\n    # Add solo nodes\n    for _, row in unclustered_df.iterrows():\n        visual_graph.add_node(\n            row[\"node_title\"],\n            label=row[\"node_title\"],\n            title=f\"Predicted group: No Community\\nTitle: {row['node_title']}\",\n        )\n\n    return visual_graph.show(\n        \"data/07_model_output/neo4j_cluster_viz.html\", notebook=False\n    )\n",
  "filepath": "content-optimization/src/content_optimization/pipelines/clustering/nodes.py",
  "parameters": {},
  "run_command": "kedro run --to-nodes='cluster_viz_node'",
  "inputs": [
    "final_clustered_nodes",
    "final_unclustered_nodes"
  ],
  "outputs": []
}